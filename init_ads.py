
import json
from avito_db import AvitoDB

def init_db_from_config(config_path: str = "config.json", db_path: str = "avito_data.db"):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ Avito.
    –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–Ω—Ñ–∏–≥–æ–º: —É–¥–∞–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.
    """
    with open(config_path, "r", encoding="utf-8") as f:
        config = json.load(f)
    
    db = AvitoDB(db_path)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    config_profiles = {}  # client_id -> profile_data
    config_ads = {}       # ad_id -> ad_data
    
    print("üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞...")
    
    for profile in config.get("profiles", []):
        client_id = profile.get("client_id")
        client_secret = profile.get("client_secret")
        name = profile.get("name")
        token = profile.get("token")
        
        if not client_id or not client_secret:
            print(f"‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ–ø—É—â–µ–Ω: –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç client_id –∏–ª–∏ client_secret: {profile}")
            continue
            
        config_profiles[client_id] = {
            'client_secret': client_secret,
            'name': name,
            'token': token,
            'urls': profile.get("urls", [])
        }
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        for url_pair in profile.get("urls", []):
            ad_url = url_pair.get("ad")
            category = url_pair.get("category")
            max_price = url_pair.get("max_price")
            target_place_start = url_pair.get("target_place_start")
            target_place_end = url_pair.get("target_place_end")
            comment = url_pair.get("comment")
            daily_budget = url_pair.get("daily_budget")
            active = url_pair.get("active", True)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é True –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            
            if not all([ad_url, category, max_price is not None, 
                       target_place_start is not None, target_place_end is not None]):
                print(f"‚ö†Ô∏è –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö: {url_pair}")
                continue
                
            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ URL
            ad_id = ad_url[:ad_url.index('?')].split('_')[-1] if '?' in ad_url else ad_url.split('_')[-1]
            
            config_ads[ad_id] = {
                'client_id': client_id,
                'ad_url': ad_url,
                'category': category,
                'max_price': int(max_price),
                'target_place_start': int(target_place_start),
                'target_place_end': int(target_place_end),
                'comment': comment,
                'daily_budget': daily_budget,
                'active': active
            }
    
    print(f"üìä –í –∫–æ–Ω—Ñ–∏–≥–µ –Ω–∞–π–¥–µ–Ω–æ: {len(config_profiles)} –ø—Ä–æ—Ñ–∏–ª–µ–π, {len(config_ads)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    db_profiles = {}      # client_id -> profile_id
    db_ads = set()        # set of ad_ids
    
    print("üîç –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏–∑ –ë–î
    db_profiles_rows = db.conn.execute("SELECT id, client_id FROM profiles").fetchall()
    for profile_id, client_id in db_profiles_rows:
        db_profiles[client_id] = profile_id
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ –ë–î
    db_ads_rows = db.conn.execute("SELECT id FROM ads").fetchall()
    for (ad_id,) in db_ads_rows:
        db_ads.add(ad_id)
    
    print(f"üìä –í –ë–î –Ω–∞–π–¥–µ–Ω–æ: {len(db_profiles)} –ø—Ä–æ—Ñ–∏–ª–µ–π, {len(db_ads)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –∫–æ–Ω—Ñ–∏–≥–µ
    profiles_to_delete = set(db_profiles.keys()) - set(config_profiles.keys())
    if profiles_to_delete:
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ –∫–æ–Ω—Ñ–∏–≥–µ: {profiles_to_delete}")
        for client_id in profiles_to_delete:
            profile_id = db_profiles[client_id]
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
            db.conn.execute("""
                DELETE FROM ad_stats 
                WHERE ad_id IN (SELECT id FROM ads WHERE profile_id = ?)
            """, (profile_id,))
            # –£–¥–∞–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
            db.conn.execute("DELETE FROM ads WHERE profile_id = ?", (profile_id,))
            # –£–¥–∞–ª—è–µ–º —Å–∞–º –ø—Ä–æ—Ñ–∏–ª—å
            db.conn.execute("DELETE FROM profiles WHERE id = ?", (profile_id,))
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: {client_id}")
    
    # –£–¥–∞–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –∫–æ–Ω—Ñ–∏–≥–µ
    ads_to_delete = db_ads - set(config_ads.keys())
    if ads_to_delete:
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ –∫–æ–Ω—Ñ–∏–≥–µ: {ads_to_delete}")
        for ad_id in ads_to_delete:
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            db.conn.execute("DELETE FROM ad_stats WHERE ad_id = ?", (ad_id,))
            # –£–¥–∞–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
            db.conn.execute("DELETE FROM ads WHERE id = ?", (ad_id,))
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: {ad_id}")
    
    db.conn.commit()
    
    # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π...")
    for client_id, profile_data in config_profiles.items():
        client_secret = profile_data['client_secret']
        name = profile_data['name']
        token = profile_data['token']
        token_created_at = "1970-01-01 00:00:00"
        
        try:
            if client_id in db_profiles:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
                profile_id = db_profiles[client_id]
                db.conn.execute("""
                    UPDATE profiles 
                    SET client_secret = ?, name = ?, token = ?, token_created_at = ?
                    WHERE id = ?
                """, (client_secret, name, token, token_created_at, profile_id))
                print(f"  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: {client_id}")
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
                try:
                    profile_id = db.insert_profile(client_id, client_secret, token, token_created_at, name)
                except TypeError:
                    # Fallback –¥–ª—è —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏ –º–µ—Ç–æ–¥–∞
                    profile_id = db.insert_profile(client_id, client_secret, token)
                    # –û–±–Ω–æ–≤–ª—è–µ–º name –æ—Ç–¥–µ–ª—å–Ω–æ
                    db.conn.execute("UPDATE profiles SET name = ? WHERE id = ?", (name, profile_id))
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: {client_id}")
                db_profiles[client_id] = profile_id
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ—Ñ–∏–ª—è {client_id}: {e}")
            continue
    
    db.conn.commit()
    
    # –î–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    print("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
    for ad_id, ad_data in config_ads.items():
        client_id = ad_data['client_id']
        
        if client_id not in db_profiles:
            print(f"  ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—è {ad_id}: –ø—Ä–æ—Ñ–∏–ª—å {client_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
            continue
            
        profile_id = db_profiles[client_id]
        
        try:
            if ad_id in db_ads:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                db.conn.execute("""
                    UPDATE ads 
                    SET category = ?, profile_id = ?, max_price = ?, 
                        target_place_start = ?, target_place_end = ?, 
                        comment = ?, url = ?, daily_budget = ?, active = ?
                    WHERE id = ?
                """, (
                    ad_data['category'], profile_id, ad_data['max_price'],
                    ad_data['target_place_start'], ad_data['target_place_end'],
                    ad_data['comment'], ad_data['ad_url'], ad_data.get('daily_budget'),
                    ad_data.get('active', True), ad_id
                ))
                print(f"  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: {ad_id}")
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                db.insert_ad(
                    ad_id, ad_data['category'], profile_id,
                    ad_data['max_price'], 
                    ad_data['target_place_start'], ad_data['target_place_end'], 
                    ad_data['comment'], ad_data['ad_url'], ad_data.get('daily_budget'),
                    ad_data.get('active', True)
                )
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: {ad_id}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è {ad_id}: {e}")
            continue
    
    db.conn.commit()
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    final_profiles = db.conn.execute("SELECT COUNT(*) FROM profiles").fetchone()[0]
    final_ads = db.conn.execute("SELECT COUNT(*) FROM ads").fetchone()[0]
    final_stats = db.conn.execute("SELECT COUNT(*) FROM ad_stats").fetchone()[0]
    
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î:")
    print(f"   –ü—Ä–æ—Ñ–∏–ª–µ–π: {final_profiles}")
    print(f"   –û–±—ä—è–≤–ª–µ–Ω–∏–π: {final_ads}")
    print(f"   –ó–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {final_stats}")
    
    db.close()
    
    # –ü–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã
    try:
        from token_utils import refresh_tokens_for_all_profiles
        refresh_tokens_for_all_profiles(db_path)
        print("üîê –¢–æ–∫–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ token_utils.py")
    
    print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

# –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞:
# init_db_from_config("config.json")
